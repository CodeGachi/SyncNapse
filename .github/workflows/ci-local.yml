name: CI (Local Test)

# This workflow is for local testing with act
# It skips env:sync since act can't easily access private repos
# Use: act -W .github/workflows/ci-local.yml

on:
  push:
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/ci.yml'
      - 'package.json'
      - 'package-lock.json'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '22.20.0'
          cache: 'npm'
      
      - name: Install root deps
        run: npm i --ignore-scripts
      
      - name: Install workspaces deps
        run: |
          npm -w frontend i --ignore-scripts
          npm -w backend i --ignore-scripts
      
      - name: Generate Prisma Client
        run: npm -w backend run prisma:generate
      
      - name: Setup environment files (Local - use existing)
        run: |
          # For local testing, copy existing .env.dev or create minimal .env
          if [ -f .env.dev ]; then
            echo "✅ Using existing .env.dev"
            cp .env.dev .env
          else
            echo "⚠️  Creating minimal .env for testing"
            cat > .env.dev << 'ENV'
          NODE_ENV=development
          PORT=4000
          DEBUG_LEVEL=debug
          DATABASE_URL=postgresql://postgres:postgres@localhost:5432/syncnapse_test?schema=public
          GOOGLE_CLIENT_ID=test-client-id
          GOOGLE_CLIENT_SECRET=test-client-secret
          GOOGLE_CALLBACK_URL=http://localhost:4000/api/auth/google/callback
          JWT_SECRET=test-jwt-secret-for-local-testing-only
          JWT_ACCESS_EXPIRATION=15m
          JWT_REFRESH_EXPIRATION=30d
          CACHE_TTL=300
          ENABLE_RATE_LIMITING=false
          RATE_LIMIT_MAX=100
          RATE_LIMIT_TTL=60
          ENV
            cp .env.dev .env
          fi
          
          # Propagate to backend (using ENV_TARGET instead of NODE_ENV to avoid conflicts)
          ENV_TARGET=dev node scripts/sync-envs.mjs
      
      - name: Test
        run: |
          npm -w frontend run test:ci
          npm -w backend run test:ci
      
      - name: Lint
        run: |
          npm -w frontend run lint
          npm -w backend run lint
      
      - name: Build
        run: |
          NODE_ENV=production npm -w frontend run build
          NODE_ENV=production npm -w backend run build

