services:
  frontend:
    build:
      context: ./frontend
    container_name: syncnapse-frontend
    environment:
      - NODE_ENV=development
      - DEBUG_LEVEL=${DEBUG_LEVEL:-info}
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    command: sh -lc "npm install --no-audit --no-fund && npm run dev"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    container_name: syncnapse-backend
    environment:
      - NODE_ENV=development
      - DEBUG_LEVEL=${DEBUG_LEVEL:-info}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:change_me@postgres:5432/syncnapse}
      - PORT=4000
      - CHOKIDAR_USEPOLLING=true
      - NPM_CONFIG_LOGLEVEL=warn
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - ./backend/node_modules:/app/node_modules
    command: sh -lc "npm install --no-audit --no-fund && npm run prisma:generate && npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    container_name: syncnapse-postgres-dev

  n8n:
    extends:
      file: docker-compose.yml
      service: n8n
    container_name: syncnapse-n8n-dev

networks:
  default:
    name: syncnapse_net
